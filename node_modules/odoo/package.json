{
  "_args": [
    [
      "odoo",
      "/home/piep/LOCAL_PROJECTS/node_odoo_api/node-forms"
    ]
  ],
  "_from": "odoo",
  "_id": "odoo@0.4.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/odoo",
  "_phantomChildren": {},
  "_requested": {
    "name": null,
    "raw": "odoo",
    "rawSpec": "odoo",
    "scope": null,
    "spec": "/home/piep/LOCAL_PROJECTS/node_odoo_api/node-forms/odoo",
    "type": "directory"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:odoo",
  "_shasum": "7cb9c55cf206b24759f067adc1c19ad7cbf6e8e0",
  "_shrinkwrap": null,
  "_spec": "odoo",
  "_where": "/home/piep/LOCAL_PROJECTS/node_odoo_api/node-forms",
  "author": {
    "email": "saidimu@gmail.com",
    "name": "Saidimu Apale"
  },
  "bugs": {
    "url": "https://github.com/saidimu/odoo/issues"
  },
  "dependencies": {
    "jayson": "^1.2.1",
    "lodash": "^3.10.1"
  },
  "description": "Node.js client library for Odoo using JSON-RPC",
  "devDependencies": {
    "gulp": "^3.8.11",
    "gulp-mocha": "^2.0.0",
    "sinon": "^1.12.2"
  },
  "directories": {
    "test": "test"
  },
  "engines": {
    "node": ">=0.11.16"
  },
  "gitHead": "f4ecfd36565a1972f0330175f0dff217384e8fc4",
  "homepage": "https://github.com/saidimu/odoo",
  "keywords": [
    "jsonrpc",
    "odoo",
    "openepr"
  ],
  "main": "./lib/index.js",
  "name": "odoo",
  "optionalDependencies": {},
  "readme": "# Odoo\n\nNode.js client library for Odoo\n\n## Installation\n\n```bash\n$ npm install Odoo\n```\n\n## Usage\n\n```js\nvar Odoo = require('Odoo');\n\nvar odoo = new Odoo({\n  host: 'localhost',\n  port: 8069,\n  database: 'demo',\n  username: 'admin',\n  password: 'admin'\n});\n\n// Connect to Odoo\nodoo.connect(function (err) {\n  if (err) { return console.log(err); }\n});\n\n// Get a partner\n// https://www.odoo.com/documentation/8.0/api_integration.html#read-records\n// https://www.odoo.com/documentation/8.0/reference/orm.html#openerp.models.Model.read\nvar params = {\n  ids: [1,2,3,4,5],\n  fields: [ 'name' ],\n}; //params\nodoo.get('res.partner', params, function (err, partners) {\n  if (err) { return console.log(err); }\n\n  console.log(partners);\n// [\n//   { id: 1, name: 'Demo Company' },\n//   { id: 3, name: 'Administrator' },\n//   { id: 4, name: 'Public user' },\n//   { id: 5, name: 'Demo User' }\n// ]\n}); //get\n\n\n// Search & Get products in one RPC call\n// https://www.odoo.com/documentation/8.0/api_integration.html#search-and-read\n// https://www.odoo.com/documentation/8.0/reference/orm.html#openerp.models.Model.search\n// https://www.odoo.com/documentation/8.0/reference/orm.html#openerp.models.Model.read\nvar params = {\n  ids: [1,2,3,4,5],\n  domain: [ [ 'list_price', '>', '50' ], [ 'list_price', '<', '65' ] ],\n  fields: [ 'name', 'list_price', 'items' ],\n  order: 'list_price',\n  limit: 5,\n  offset: 0,  \n}; //params\nodoo.search_read('product.product', params, function (err, products) {\n  if (err) { return console.log(err); }\n\n  console.log(products);\n// [\n//   { list_price: 60, id: 52, name: 'Router R430' },\n//   { list_price: 62, id: 39, name: 'Headset standard' }\n// ]\n\n}); //search_read\n\n\n// Browse products by ID\n// Not a direct implementation of Odoo RPC 'browse' but rather a workaround based on 'search_read'\n// https://www.odoo.com/documentation/8.0/reference/orm.html#openerp.models.Model.browse\nvar params = {\n  fields: [ 'name', 'list_price'],\n  limit: 5,\n  offset: 0,  \n}; //params\nodoo.browse_by_id('product.product', params, function (err, products) {\n  if (err) { return console.log(err); }\n\n  console.log(products);\n// [\n//   { list_price: 4.49, id: 1180, name: 'Fruit Cup' },\n//   { list_price: 0, id: 1139, name: 'Orange Crush' },\n//   { list_price: 1.59, id: 1062, name: 'Blueberry muffin' },\n//   { list_price: 1.35, id: 1381, name: 'Otis Harvest Bran' }\n// ]\n}); //browse_by_id\n\n\n// Generic RPC call\n// Note that, unlike the other methods, the context is not automatically included\nvar endpoint = '/web/dataset/call_kw';\nvar model = 'sale.order';\nvar method = 'action_view_delivery';\n\nvar args = [\n  [sale_order_id],\n  {\n    tz: odoo.context.tz,\n    uid: odoo.context.uid,\n  },\n];//args\n\nvar params = {\n  model: model,\n  method: method,\n  args: args,\n  kwargs: {},\n};//params\n\n// View Delivery Order\nodoo.rpc_call(endpoint, params, function(err, result) {\n  if(err) {\n    console.log(err);\n    return;\n  }//if\n\n  var delivery_order = result;\n\n  console.log(delivery_order);\n});//odoo.rpc_call\n\n\n```\n\n## Methods\n\n* odoo.connect(callback)\n* odoo.get(model, id, callback)\n* odoo.search(model, params, callback)\n* odoo.search_read(model, params, callback)\n* odoo.browse_by_id(model, params, callback)\n* odoo.create(model, params, callback)\n* odoo.update(model, id, params, callback)\n* odoo.delete(model, id, callback)\n* odoo.rpc_call(endpoint, params, callback);\n\n##Node version\nWorks better with NodeJS v11.16 and further\n\n## Reference\n\n* [Odoo Technical Documentation](https://www.odoo.com/documentation/8.0)\n* [Odoo Web Service API](https://www.odoo.com/documentation/8.0/api_integration.html)\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2015 Marco GodÃ­nez, 4yopping and all the related trademarks\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/saidimu/odoo.git"
  },
  "scripts": {
    "test": "mocha test"
  },
  "version": "0.4.0"
}
